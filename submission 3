{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":59291,"databundleVersionId":6678907,"sourceType":"competition"}],"dockerImageVersionId":30558,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Linking Writing processes to writing quality","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19"}},{"cell_type":"markdown","source":"# Import the necessary packages needed for this analysis","metadata":{"execution":{"iopub.status.busy":"2023-10-14T06:24:28.477946Z","iopub.execute_input":"2023-10-14T06:24:28.478308Z","iopub.status.idle":"2023-10-14T06:24:28.502792Z","shell.execute_reply.started":"2023-10-14T06:24:28.478271Z","shell.execute_reply":"2023-10-14T06:24:28.501776Z"}}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.metrics import mean_absolute_error","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:42:15.523084Z","iopub.execute_input":"2023-10-14T10:42:15.523423Z","iopub.status.idle":"2023-10-14T10:42:15.917706Z","shell.execute_reply.started":"2023-10-14T10:42:15.523397Z","shell.execute_reply":"2023-10-14T10:42:15.916604Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_log=pd.read_csv('/kaggle/input/linking-writing-processes-to-writing-quality/train_logs.csv')\ntrain_log.head()","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:39:30.045312Z","iopub.execute_input":"2023-10-14T10:39:30.046197Z","iopub.status.idle":"2023-10-14T10:39:44.346839Z","shell.execute_reply.started":"2023-10-14T10:39:30.046153Z","shell.execute_reply":"2023-10-14T10:39:44.345699Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_scores=pd.read_csv('/kaggle/input/linking-writing-processes-to-writing-quality/train_scores.csv')\ntrain_scores.head()","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:39:44.348688Z","iopub.execute_input":"2023-10-14T10:39:44.349408Z","iopub.status.idle":"2023-10-14T10:39:44.367858Z","shell.execute_reply.started":"2023-10-14T10:39:44.349367Z","shell.execute_reply":"2023-10-14T10:39:44.366489Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# lets read in the test data\ntest=pd.read_csv('/kaggle/input/linking-writing-processes-to-writing-quality/test_logs.csv')\ntest.head()","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:39:44.370321Z","iopub.execute_input":"2023-10-14T10:39:44.3713Z","iopub.status.idle":"2023-10-14T10:39:44.391638Z","shell.execute_reply.started":"2023-10-14T10:39:44.371256Z","shell.execute_reply":"2023-10-14T10:39:44.39043Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_log.columns==test.columns","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:39:44.393646Z","iopub.execute_input":"2023-10-14T10:39:44.394058Z","iopub.status.idle":"2023-10-14T10:39:44.401618Z","shell.execute_reply.started":"2023-10-14T10:39:44.394019Z","shell.execute_reply":"2023-10-14T10:39:44.400247Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_log.shape, test.shape","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:39:44.402913Z","iopub.execute_input":"2023-10-14T10:39:44.40337Z","iopub.status.idle":"2023-10-14T10:39:44.41821Z","shell.execute_reply.started":"2023-10-14T10:39:44.403339Z","shell.execute_reply":"2023-10-14T10:39:44.417435Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":" What I note is that the score is the same. That means that the score is for the final paper. The other variables keep changing.  Lets confirm this by looking at the second student \n \n In light of this, we have to aggregate the data in terms of  each student. This will make it easy in terms  of the  final predictions. ","metadata":{}},{"cell_type":"markdown","source":"# Aggregating the data","metadata":{}},{"cell_type":"markdown","source":"## lets start with aggregating the numerical data","metadata":{}},{"cell_type":"code","source":"# create a function that can be applied also to the test dataset\n\ndef aggregation(data):\n    numeric = data.select_dtypes('int64')\n    numeric['id'] = data['id']\n    \n    means = numeric.groupby('id').mean()\n    stds = numeric.groupby('id').std()\n    medians = numeric.groupby('id').median()\n    mins = numeric.groupby('id').min()\n    maxs = numeric.groupby('id').max()\n    \n    means.columns = [col + '_means' for col in means.columns]\n    stds.columns = [col + '_stds' for col in stds.columns]\n    medians.columns = [col + '_medians' for col in medians.columns]\n    mins.columns = [col + '_mins' for col in mins.columns]\n    maxs.columns = [col + '_maxs' for col in maxs.columns]\n    result = pd.concat([means, stds, medians, mins, maxs], axis=1)\n    \n    return result\n\n    ","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:39:46.110381Z","iopub.execute_input":"2023-10-14T10:39:46.11085Z","iopub.status.idle":"2023-10-14T10:39:46.122585Z","shell.execute_reply.started":"2023-10-14T10:39:46.110815Z","shell.execute_reply":"2023-10-14T10:39:46.121409Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"\n\n\n\ndef character_aggregation(data):\n    character_df = data.select_dtypes('object')\n    character_df['id'] = data['id']\n    result=character_df.groupby('id').nunique()\n    \n    \n    return result","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:39:49.252577Z","iopub.execute_input":"2023-10-14T10:39:49.252911Z","iopub.status.idle":"2023-10-14T10:39:49.258381Z","shell.execute_reply.started":"2023-10-14T10:39:49.252885Z","shell.execute_reply":"2023-10-14T10:39:49.257144Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# now we creatfe a final function\ndef feature_extraction(data):\n    numeric_df_clean= aggregation(data)\n    character_df_clean=character_aggregation(data)\n    result = numeric_df_clean.merge(character_df_clean, on='id', how='inner')\n    return  result\ntrain=feature_extraction(train_log)\n    ","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:39:53.641811Z","iopub.execute_input":"2023-10-14T10:39:53.642203Z","iopub.status.idle":"2023-10-14T10:40:05.102207Z","shell.execute_reply.started":"2023-10-14T10:39:53.642173Z","shell.execute_reply":"2023-10-14T10:40:05.100977Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train.head()","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:40:05.103845Z","iopub.execute_input":"2023-10-14T10:40:05.104813Z","iopub.status.idle":"2023-10-14T10:40:05.124741Z","shell.execute_reply.started":"2023-10-14T10:40:05.104781Z","shell.execute_reply":"2023-10-14T10:40:05.123903Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"y=train_scores['score']\nX=train","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:40:05.125869Z","iopub.execute_input":"2023-10-14T10:40:05.126748Z","iopub.status.idle":"2023-10-14T10:40:05.139714Z","shell.execute_reply.started":"2023-10-14T10:40:05.126712Z","shell.execute_reply":"2023-10-14T10:40:05.138627Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_train, X_test, y_train, y_test=train_test_split(X,y, test_size=0.2)","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:40:41.342691Z","iopub.execute_input":"2023-10-14T10:40:41.34316Z","iopub.status.idle":"2023-10-14T10:40:41.351495Z","shell.execute_reply.started":"2023-10-14T10:40:41.343123Z","shell.execute_reply":"2023-10-14T10:40:41.350327Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_train.shape","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:40:45.207691Z","iopub.execute_input":"2023-10-14T10:40:45.208054Z","iopub.status.idle":"2023-10-14T10:40:45.214891Z","shell.execute_reply.started":"2023-10-14T10:40:45.208025Z","shell.execute_reply":"2023-10-14T10:40:45.213772Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Fitting a Random forest regressor","metadata":{}},{"cell_type":"code","source":"Reg=XGBRegressor()\nReg.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:41:00.272763Z","iopub.execute_input":"2023-10-14T10:41:00.273125Z","iopub.status.idle":"2023-10-14T10:41:00.972985Z","shell.execute_reply.started":"2023-10-14T10:41:00.273096Z","shell.execute_reply":"2023-10-14T10:41:00.971909Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_preds=Reg.predict(X_test)\nmean_absolute_error(y_test, y_preds)","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:41:07.901973Z","iopub.execute_input":"2023-10-14T10:41:07.902462Z","iopub.status.idle":"2023-10-14T10:41:07.916724Z","shell.execute_reply.started":"2023-10-14T10:41:07.902431Z","shell.execute_reply":"2023-10-14T10:41:07.915692Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model=GradientBoostingRegressor()\nmodel.fit(X_train, y_train)\ny_preds_model=model.predict(X_test)\nmean_absolute_error(y_test, y_preds_model)","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:43:32.783019Z","iopub.execute_input":"2023-10-14T10:43:32.783406Z","iopub.status.idle":"2023-10-14T10:43:34.596576Z","shell.execute_reply.started":"2023-10-14T10:43:32.783377Z","shell.execute_reply":"2023-10-14T10:43:34.5956Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:41:10.502019Z","iopub.execute_input":"2023-10-14T10:41:10.502629Z","iopub.status.idle":"2023-10-14T10:41:10.514408Z","shell.execute_reply.started":"2023-10-14T10:41:10.502598Z","shell.execute_reply":"2023-10-14T10:41:10.513612Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_data=feature_extraction(test)\npreds=model.predict(test_data)\npreds","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:41:13.652621Z","iopub.execute_input":"2023-10-14T10:41:13.652975Z","iopub.status.idle":"2023-10-14T10:41:13.678897Z","shell.execute_reply.started":"2023-10-14T10:41:13.652948Z","shell.execute_reply":"2023-10-14T10:41:13.67811Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"submission=pd.DataFrame({'id':test_data.index, 'score':preds})\nsubmission.to_csv('submission.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2023-10-14T10:41:17.252981Z","iopub.execute_input":"2023-10-14T10:41:17.253434Z","iopub.status.idle":"2023-10-14T10:41:17.261367Z","shell.execute_reply.started":"2023-10-14T10:41:17.253403Z","shell.execute_reply":"2023-10-14T10:41:17.260346Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}